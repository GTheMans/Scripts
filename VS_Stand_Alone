# === Set Execution Policy ===
Set-ExecutionPolicy RemoteSigned -Scope Process -Force

Write-Host "=== Full Video Scare Activated ==="

# === 0. Wait for mouse movement ===
Write-Host "Waiting for mouse movement..."
Add-Type -AssemblyName System.Windows.Forms
$initialPosition = [System.Windows.Forms.Cursor]::Position
do {
    Start-Sleep -Milliseconds 300
    $currentPosition = [System.Windows.Forms.Cursor]::Position
} while ($initialPosition.X -eq $currentPosition.X -and $initialPosition.Y -eq $currentPosition.Y)

Write-Host "Mouse moved. Initiating sequence..."

# === 1. Pause before lock ===
Start-Sleep -Seconds 2

# === 2. Lock input (keyboard & mouse) ===
Add-Type @"
using System;
using System.Runtime.InteropServices;
public class InputLocker {
    [DllImport("user32.dll")]
    public static extern bool BlockInput(bool fBlockIt);
}
"@
[InputLocker]::BlockInput($true)
Write-Host "Input locked."

# === 3. Show fake error in command window (auto-close) ===
Start-Job {
    $errorText = "A critical error has occurred.
System file: C:\Windows\System32\config\SYSTEM
Error code: 0x0000EF01
Terminating shell in 3 seconds..."

    $temp = "$env:TEMP\err_fake.bat"
    $errorText | Out-File -Encoding ASCII -FilePath $temp
    Start-Process -WindowStyle Normal -FilePath "cmd.exe" -ArgumentList "/c type `"$temp`" & timeout /t 3 >nul"
    Start-Sleep -Seconds 4
    Remove-Item $temp -Force -ErrorAction SilentlyContinue
} | Out-Null

Start-Sleep -Seconds 4

# === 4. Download video from GitHub ===
$downloadUrl = "https://github.com/GTheMans/Scripts/raw/main/Welcome_to_the_Game_-_Hacking_Alert%20(1).mp4"
$videoPath = "$env:TEMP\skull.mp4"
Write-Host "Downloading video..."
Invoke-WebRequest -Uri $downloadUrl -OutFile $videoPath

if (-Not (Test-Path $videoPath)) {
    Write-Host "Error: Video download failed."
    [InputLocker]::BlockInput($false)
    exit
}
Write-Host "Video downloaded."

# === 5. Launch video fullscreen ===
Start-Process "wmplayer.exe" -ArgumentList "/fullscreen", "$videoPath"
Write-Host "Scare video launched."

# === 6. Wait for 14s while video plays ===
Start-Sleep -Seconds 14

# === 7. Force-close media player & delete video ===
Get-Process -Name "wmplayer" -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue
Get-Process -Name "vlc" -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue

Remove-Item -Path $videoPath -Force -ErrorAction SilentlyContinue
Write-Host "Player killed and video file deleted."

# === 8. Extra 3 seconds before unlocking input ===
Start-Sleep -Seconds 3
[InputLocker]::BlockInput($false)
Write-Host "Input unlocked."

# === 9. Exit ===
Write-Host "Mission complete. Exiting."
exit
